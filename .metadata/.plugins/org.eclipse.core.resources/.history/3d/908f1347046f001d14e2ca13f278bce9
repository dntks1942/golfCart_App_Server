package greetingServer;

//File Name GreetingServer.java
import java.net.*;


import java.io.*;

public class GreetingServer {
private ServerSocket serverSocket;
Socket cartSocket, appSocket;
boolean isAppReady, isCartReady;

public GreetingServer(int port) throws IOException {
   serverSocket = new ServerSocket(port);

}
public Socket getAppSocket() {
	return null;
}

public Socket getCartSocket() {
	return null;
}


public void getConnection() {
   while(!(isAppReady && isCartReady)) {
      try {
         System.out.println("Waiting for client on port " + 
            serverSocket.getLocalPort() + "...");
         Socket server = serverSocket.accept();

         System.out.println("Just connected to " + server.getRemoteSocketAddress());
         DataInputStream in = new DataInputStream(server.getInputStream());
         
         String input = in.readUTF();
         System.out.println(server.getInetAddress() + " : " + input);
         if(input.equals("app")) {
        	 isAppReady = true;
        	 /*
        	 appIP = server.getInetAddress();
        	 appPort = server.getPort();
        	 */
        	 appSocket = server;
        	 if(isCartReady) {
                 DataOutputStream outToCart = new DataOutputStream(cartSocket.getOutputStream());
                 outToCart.writeUTF("App is ready!");
        	 }
             DataOutputStream out = new DataOutputStream(server.getOutputStream());
             if(isCartReady) {
            	 out.writeUTF("Cart is also ready!");
             }
             else {
            	 out.writeUTF("Cart is not ready yet!");
             }
         }
         
         else if(input.equals("cart")) {
        	 isCartReady = true;
        	 /*
        	 cartIP = server.getInetAddress();
        	 cartPort = server.getPort();
        	 */
        	 cartSocket = server;
        	 if(isAppReady) {
                 DataOutputStream outToApp = new DataOutputStream(appSocket.getOutputStream());
                 outToApp.writeUTF("Cart is ready!");
        	 }
             DataOutputStream out = new DataOutputStream(server.getOutputStream());
             if(isAppReady) {
            	 out.writeUTF("App is also ready!");
             }
             else {
            	 out.writeUTF("App is not ready yet!");
             }
         }
         
         
         
         else if(isAppReady && isCartReady){
        	 if(server.getInetAddress() == appSocket.getInetAddress()) {
                 DataOutputStream outToCart = new DataOutputStream(cartSocket.getOutputStream());
                 outToCart.writeUTF(input);
        	 }
        	 
        	 else if(server.getInetAddress() == cartSocket.getInetAddress()) {
        		 //appSocket = new Socket(appIP, appPort);
                 DataOutputStream outToCart = new DataOutputStream(appSocket.getOutputStream());
                 outToCart.writeUTF(input);
        	 }
         }
         
         
      } catch (SocketTimeoutException s) {
         System.out.println("Socket timed out!");
         break;
      } catch (IOException e) {
         e.printStackTrace();
         break;
      }
   }
}

public static void main(String [] args) throws IOException {
   int port = 1234;
   GreetingServer t;
   t = new GreetingServer(port);
   t.getConnection();
   
   Socket app = t.getAppSocket();
   Socket cart = t.getAppSocket();
   interTransmit AppToCart = new interTransmit(app, cart);
   interTransmit CartToApp = new interTransmit(cart, app);
   AppToCart.start();
   CartToApp.start();
}
}

class interTransmit extends Thread{
	Socket source, target;
	public interTransmit(Socket source, Socket target) throws IOException {
		this.source = source;
		this.target = target;
	
		while(true) {
			DataInputStream in;
			in = new DataInputStream(source.getInputStream());
	        String input = in.readUTF();
	        System.out.println(source.getInetAddress() + " : " + input);
			DataOutputStream out;
			out = new DataOutputStream(target.getOutputStream());
			out.writeUTF(input);
			System.out.println("Send!!!");
		}

	}
}

